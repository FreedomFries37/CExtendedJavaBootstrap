#include <stdint.h>

struct s {
	int a;
	double c;
};

char c = '\n';
char b = 'a';

void hello_world() {
	int a = 3;
	int b = 5;

	int c = a + b;
	int *c_ptr = &c;
}


class SimpleGraph {
	private int nodes;
	int** adjacency;

	public SimpleGraph(int nodes) {
		this->nodes = nodes;
		this->adjacency = calloc(sizeof(int*), nodes);
		for(int i = 0; i < nodes; ++i) {
			this->adjacency[i] = calloc(sizeof(int), nodes);
			for(int j = 0; j < nodes; ++j) {
				this->adjacency[i][j] = 0;
			}
		}
	}

	virtual void print() {
		for(int i = 0; i < this->nodes; ++i) {
			for(int j = 0; j < this->nodes; ++j) {
				new std::Int(this->adjacency[i][j])->print();
				print(" ");
        	}
        	println(nullptr);
		}
	}

	virtual public void addEdge(int from, int to) {
		this->adjacency[from][to] = 1;
		this->adjacency[to][from] = 1;
	}

};

int main(int argc, std::String argv[]) {


	for(int i = 0; i < argc; ++i) {
		println_s(argv[i]);
	}

	SimpleGraph g = new SimpleGraph(15);
	g->addEdge(0, 5);
	g->println();

	return 0;

}