#include <stdint.h>

for <T> class Wrapper {
	private T value;

	public Wrapper() {
		this->value = nullptr;
	}

	public T getValue() {
		return this->value;
	}
	public void setValue(T val) {
		this->value = val;
	}
};

for <T> T earlyTest(T input) {
	return input;
}

for <T> int getHash(T input) {
	return input->hashcode();
}

for <T> void replace(T l, T r) {
	T temp = l;
	*l = *r;
	*r = *temp;
}


int main(int argc, std::String argv[]) {
	std::Object o = new std::Object();
	std::Object self = earlyTest<std::Object>(o);
	int hash = getHash<std::Object>(o);
	std::Int h = new std::Int(hash);
	h->println();

	std::Int l = new std::Int(0);
	std::Int r = new std::Int(1);

	replace<std::Int>(l, r);

	return 0;
}