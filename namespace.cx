int bleh();

in std {
	class object {
		private object o;
		private char* name;

		public object(char* name) {
			this->name = name;
		}

		virtual int hashcode();
		virtual int equals(object* other);
	};

	in ko class object {
    		private object o;
    		private char* name;

    		public object(char* name) {
    			this->name = name;
    		}

    		virtual int hashcode();
    		virtual int equals(object* other);
    };
}

in ko
class object {
	private std::object other;

};


int main() {
		std::object id;

		return 0;
}

in std int foo() {
	std::ko::object o;

	return 1;
}


implement std::object {
	int hashcode() {
			return (int) this;
	}



	int equals(std::object* other) {
		return this == other;
	}
}

	int hello() {
		return -1;
	}


void main() {
	// std::object* o = new std::object("hello");
}



