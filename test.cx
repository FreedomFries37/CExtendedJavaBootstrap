class parent {
	private int field1;
	private int field2;
	private unsigned long _field3;

	public parent(int field) {
		field1 = field;
		field2 = 0;
		_field3 = 3;
	}

	public virtual int sum() {
		return field1 + field2 + (int) _field3;
	}

	virtual double m3(int input) {
    	return 5.0 * input;
    }
}

class derived : parent {
	private float fl;

	public derived(int field, float fl) : super(field) {
		this->f1 = f1;
	}

	virtual double m3(int input) {
    	return 2.0 * input;
    }

}

typedef double __double
typedef __double meep

int main(int argc, char* argv[]) { // use this type of comment

	parent p1 = parent(14);
	parent p2 = parent(17);
	double d = .678 / 8.2;

	char* str = "hello world!!";
	char c = 'a';
	char d = '\t';
	/* THIS IS A COMMENT */

	int sum = p1.sum() + p2.sum();


	return 0;
}